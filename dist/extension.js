(()=>{"use strict";var e={265:function(e,n,t){var a,o=this&&this.__createBinding||(Object.create?function(e,n,t,a){void 0===a&&(a=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,a,o)}:function(e,n,t,a){void 0===a&&(a=t),e[a]=n[t]}),s=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),d=this&&this.__importStar||(a=function(e){return a=Object.getOwnPropertyNames||function(e){var n=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[n.length]=t);return n},a(e)},function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t=a(e),d=0;d<t.length;d++)"default"!==t[d]&&o(n,e,t[d]);return s(n,e),n});Object.defineProperty(n,"__esModule",{value:!0}),n.activate=function(e){const n=r.commands.registerCommand("api-tester.open",()=>{const e=r.window.createWebviewPanel("apiTester","API Tester",r.ViewColumn.One,{enableScripts:!0,retainContextWhenHidden:!0});e.webview.html='\n    <!DOCTYPE html>\n    <html lang="en">\n    <head>\n      <meta charset="UTF-8" />\n      <style>\n        body {\n          font-family: sans-serif;\n          margin: 0;\n          background: #1e1e1e;\n          color: #ddd;\n          display: flex;\n          flex-direction: column;\n          height: 100vh;\n        }\n        header {\n          background: #202123;\n          padding: 10px;\n          display: flex;\n          align-items: center;\n          gap: 10px;\n        }\n        select, input, textarea, button {\n          border-radius: 4px;\n          border: none;\n          padding: 6px;\n          font-size: 14px;\n        }\n        select, input {\n          background: #2d2f31;\n          color: #eee;\n        }\n        textarea {\n          background: #2d2f31;\n          color: #eee;\n          resize: vertical;\n        }\n        button {\n          background: #f26b38;\n          color: white;\n          cursor: pointer;\n        }\n        button:hover {\n          opacity: 0.9;\n        }\n        .tabs {\n          display: flex;\n          background: #2a2c2e;\n          padding: 5px;\n          overflow-x: auto;\n        }\n        .tab {\n          padding: 6px 12px;\n          margin-right: 6px;\n          background: #3a3d3f;\n          color: white;\n          border-radius: 4px 4px 0 0;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n        }\n        .tab.active {\n          background: #f26b38;\n        }\n        .tab button {\n          background: transparent;\n          color: white;\n          border: none;\n          cursor: pointer;\n          font-size: 12px;\n        }\n        .content {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          padding: 10px;\n          background: #1e1e1e;\n          overflow: auto;\n        }\n        .response {\n          margin-top: 10px;\n          background: #252728;\n          padding: 10px;\n          border-radius: 4px;\n          white-space: pre-wrap;\n          color: #a9dc76;\n          font-family: monospace;\n        }\n        .sub-tabs {\n          display: flex;\n          gap: 10px;\n          margin: 10px 0;\n        }\n        .sub-tab {\n          padding: 6px 10px;\n          cursor: pointer;\n          border-radius: 4px;\n          background: #333;\n          color: #aaa;\n        }\n        .sub-tab.active {\n          background: #f26b38;\n          color: white;\n        }\n        .hidden {\n          display: none;\n        }\n      </style>\n    </head>\n    <body>\n      <div class="tabs" id="tabs"></div>\n      <header>\n        <select id="method">\n          <option>GET</option>\n          <option>POST</option>\n          <option>PUT</option>\n          <option>PATCH</option>\n          <option>DELETE</option>\n        </select>\n        <input type="text" id="url" placeholder="Enter request URL..." style="flex:1"/>\n        <button id="send">Send</button>\n        <button id="newTab">+ Tab</button>\n      </header>\n      <div class="content">\n        <div class="sub-tabs">\n          <div class="sub-tab active" data-tab="body">Body</div>\n          <div class="sub-tab" data-tab="headers">Headers</div>\n        </div>\n        <textarea id="body" rows="8" placeholder="Request Body (JSON)"></textarea>\n        <textarea id="headers" class="hidden" rows="8" placeholder=\'{ "Content-Type": "application/json" }\'></textarea>\n        <div class="response" id="response">Response will appear here...</div>\n      </div>\n      <script>\n        const vscode = acquireVsCodeApi();\n\n        let tabs = [];\n        let activeTab = null;\n\n        function addTab() {\n          const id = Date.now().toString();\n          const state = { id, url: "", method: "GET", body: "", headers: "", response: "" };\n          tabs.push(state);\n          setActiveTab(id);\n          renderTabs();\n          loadState();\n        }\n\n        function removeTab(id) {\n          tabs = tabs.filter(t => t.id !== id);\n          if (activeTab === id && tabs.length > 0) {\n            setActiveTab(tabs[0].id);\n          } else if (tabs.length === 0) {\n            addTab();\n          }\n          renderTabs();\n          loadState();\n        }\n\n        function setActiveTab(id) {\n          activeTab = id;\n        }\n\n        function renderTabs() {\n          const tabsDiv = document.getElementById("tabs");\n          tabsDiv.innerHTML = "";\n          tabs.forEach(tab => {\n            const el = document.createElement("div");\n            el.className = "tab" + (tab.id === activeTab ? " active" : "");\n            el.innerHTML = tab.url || "New Request";\n            const closeBtn = document.createElement("button");\n            closeBtn.textContent = "x";\n            closeBtn.onclick = (e) => {\n              e.stopPropagation();\n              removeTab(tab.id);\n            };\n            el.appendChild(closeBtn);\n            el.onclick = () => {\n              saveState();\n              setActiveTab(tab.id);\n              renderTabs();\n              loadState();\n            };\n            tabsDiv.appendChild(el);\n          });\n        }\n\n        function saveState() {\n          const tab = tabs.find(t => t.id === activeTab);\n          if (tab) {\n            tab.url = document.getElementById("url").value;\n            tab.method = document.getElementById("method").value;\n            tab.body = document.getElementById("body").value;\n            tab.headers = document.getElementById("headers").value;\n            tab.response = document.getElementById("response").innerText;\n          }\n        }\n\n        function loadState() {\n          const tab = tabs.find(t => t.id === activeTab);\n          if (tab) {\n            document.getElementById("url").value = tab.url;\n            document.getElementById("method").value = tab.method;\n            document.getElementById("body").value = tab.body;\n            document.getElementById("headers").value = tab.headers;\n            document.getElementById("response").innerText = tab.response || "Response will appear here...";\n          }\n        }\n\n        document.getElementById("send").onclick = () => {\n          saveState();\n          const tab = tabs.find(t => t.id === activeTab);\n          vscode.postMessage({\n            command: "sendRequest",\n            url: tab.url,\n            method: tab.method,\n            headers: tab.headers ? JSON.parse(tab.headers) : {},\n            body: tab.body,\n          });\n        };\n\n        document.getElementById("newTab").onclick = () => {\n          saveState();\n          addTab();\n        };\n\n        window.addEventListener("message", event => {\n          const message = event.data;\n          if (message.command === "showResponse") {\n            const tab = tabs.find(t => t.id === activeTab);\n            if (tab) {\n              tab.response = message.response;\n              document.getElementById("response").innerText = message.response;\n            }\n          }\n        });\n\n        document.querySelectorAll(".sub-tab").forEach(el => {\n          el.onclick = () => {\n            document.querySelectorAll(".sub-tab").forEach(st => st.classList.remove("active"));\n            el.classList.add("active");\n            const target = el.dataset.tab;\n            document.getElementById("body").classList.add("hidden");\n            document.getElementById("headers").classList.add("hidden");\n            document.getElementById(target).classList.remove("hidden");\n          };\n        });\n\n        // Start with one tab\n        addTab();\n      <\/script>\n    </body>\n    </html>\n  ',e.webview.onDidReceiveMessage(async n=>{if("sendRequest"===n.command)try{const t=await fetch(n.url,{method:n.method,headers:n.headers,body:"GET"!==n.method&&"HEAD"!==n.method?n.body:void 0}),a=await t.text();let o=a;try{o=JSON.stringify(JSON.parse(a),null,2)}catch(e){}e.webview.postMessage({command:"showResponse",response:o})}catch(n){e.webview.postMessage({command:"showResponse",response:`Error: ${n.message}`})}})});e.subscriptions.push(n)},n.deactivate=function(){};const r=d(t(398))},398:e=>{e.exports=require("vscode")}},n={},t=function t(a){var o=n[a];if(void 0!==o)return o.exports;var s=n[a]={exports:{}};return e[a].call(s.exports,s,s.exports,t),s.exports}(265);module.exports=t})();